Terminals unused in grammar

   UNKNOWN


状态 10 conflicts: 1 shift/reduce
状态 19 conflicts: 1 shift/reduce
状态 20 conflicts: 1 shift/reduce
状态 22 conflicts: 8 shift/reduce
状态 23 conflicts: 2 shift/reduce
状态 75 conflicts: 1 shift/reduce
状态 77 conflicts: 2 shift/reduce
状态 78 conflicts: 2 shift/reduce
状态 79 conflicts: 2 shift/reduce
状态 80 conflicts: 2 shift/reduce
状态 81 conflicts: 2 shift/reduce
状态 82 conflicts: 2 shift/reduce
状态 83 conflicts: 2 shift/reduce
状态 84 conflicts: 2 shift/reduce
状态 92 conflicts: 1 shift/reduce


语法

    0 $accept: program $end

    1 program: expression

    2 breakable-expression: BREAK
    3                     | expression

    4 expression: if-then-else
    5           | if-then
    6           | while
    7           | for
    8           | let-expression
    9           | assignment-expression
   10           | logical-or-expression

   11 if-then-else: IF expression THEN expression ELSE expression

   12 if-then: IF expression THEN expression

   13 for: FOR IDENTIFIER ASSIGN expression TO expression DO breakable-expression

   14 while: WHILE expression DO breakable-expression

   15 let-expression: LET space-separated-declaration IN semicolon-separated-expression END

   16 semicolon-separated-expression: %empty
   17                               | nonempty-semicolon-separated-expression

   18 nonempty-semicolon-separated-expression: expression
   19                                        | semicolon-separated-expression SEMICOLON expression

   20 assignment-expression: lvalue-expression ASSIGN expression

   21 logical-or-expression: logical-and-expression
   22                      | logical-or-expression OR logical-and-expression

   23 logical-and-expression: equality-expression
   24                       | logical-and-expression AND equality-expression

   25 equality-expression: additive-expression
   26                    | additive-expression EQ additive-expression
   27                    | additive-expression NEQ additive-expression
   28                    | additive-expression LT additive-expression
   29                    | additive-expression LE additive-expression
   30                    | additive-expression GT additive-expression
   31                    | additive-expression GE additive-expression

   32 additive-expression: multiplicative-expression
   33                    | additive-expression PLUS multiplicative-expression
   34                    | additive-expression MINUS multiplicative-expression

   35 multiplicative-expression: unary-expression
   36                          | multiplicative-expression TIMES unary-expression
   37                          | multiplicative-expression DIVIDE unary-expression

   38 unary-expression: postfix-expression
   39                 | MINUS unary-expression

   40 postfix-expression: lvalue-expression
   41                   | STRING
   42                   | INT
   43                   | NIL
   44                   | LPAREN semicolon-separated-expression RPAREN
   45                   | IDENTIFIER LPAREN comma-separated-expression RPAREN
   46                   | IDENTIFIER LBRACE comma-separated-record-field RBRACE
   47                   | IDENTIFIER LBRACKET expression RBRACKET OF expression

   48 lvalue-expression: IDENTIFIER
   49                  | IDENTIFIER LBRACKET expression RBRACKET
   50                  | lvalue-expression LBRACKET expression RBRACKET
   51                  | lvalue-expression DOT IDENTIFIER

   52 comma-separated-record-field: %empty
   53                             | nonempty-comma-separated-record-field

   54 nonempty-comma-separated-record-field: IDENTIFIER EQ expression
   55                                      | comma-separated-record-field COMMA IDENTIFIER EQ expression

   56 comma-separated-expression: %empty
   57                           | nonempty-comma-separated-expression

   58 nonempty-comma-separated-expression: expression
   59                                    | comma-separated-expression COMMA expression

   60 space-separated-declaration: %empty
   61                            | space-separated-declaration declaration

   62 declaration: function-declaration
   63            | variable-declaration
   64            | type-declaration

   65 type-declaration: TYPE IDENTIFIER EQ type

   66 type: IDENTIFIER
   67     | ARRAY OF IDENTIFIER
   68     | record-type

   69 record-type: LBRACE comma-separated-field RBRACE

   70 comma-separated-field: IDENTIFIER COLON IDENTIFIER
   71                      | comma-separated-field COMMA IDENTIFIER COLON IDENTIFIER

   72 function-declaration: FUNCTION IDENTIFIER LPAREN comma-separated-parameter RPAREN COLON IDENTIFIER EQ expression
   73                     | FUNCTION IDENTIFIER LPAREN comma-separated-parameter RPAREN EQ expression

   74 comma-separated-parameter: %empty
   75                          | nonempty-comma-separated-parameter

   76 nonempty-comma-separated-parameter: IDENTIFIER COLON IDENTIFIER
   77                                   | comma-separated-parameter COMMA IDENTIFIER COLON IDENTIFIER

   78 variable-declaration: VAR IDENTIFIER nullable-colon-type ASSIGN expression

   79 nullable-colon-type: %empty
   80                    | COLON IDENTIFIER


Terminals, with rules where they appear

$end (0) 0
error (256)
LPAREN (258) 44 45 72 73
RPAREN (259) 44 45 72 73
LBRACKET (260) 47 49 50
RBRACKET (261) 47 49 50
LBRACE (262) 46 69
RBRACE (263) 46 69
ASSIGN (264) 13 20 78
COLON (265) 70 71 72 76 77 80
DOT (266) 51
COMMA (267) 55 59 71 77
SEMICOLON (268) 19
TIMES (269) 36
DIVIDE (270) 37
PLUS (271) 33
MINUS (272) 34 39
EQ (273) 26 54 55 65 72 73
NEQ (274) 27
GT (275) 30
LT (276) 28
GE (277) 31
LE (278) 29
AND (279) 24
OR (280) 22
ARRAY (281) 67
BREAK (282) 2
DO (283) 13 14
ELSE (284) 11
END (285) 15
FOR (286) 13
FUNCTION (287) 72 73
IF (288) 11 12
IN (289) 15
LET (290) 15
NIL (291) 43
OF (292) 47 67
THEN (293) 11 12
TO (294) 13
TYPE (295) 65
VAR (296) 78
WHILE (297) 14
UNKNOWN (298)
INT (299) 42
STRING (300) 41
IDENTIFIER (301) 13 45 46 47 48 49 51 54 55 65 66 67 70 71 72 73 76
    77 78 80


Nonterminals, with rules where they appear

$accept (47)
    左： 0
program (48)
    左： 1, 右： 0
breakable-expression (49)
    左： 2 3, 右： 13 14
expression (50)
    左： 4 5 6 7 8 9 10, 右： 1 3 11 12 13 14 18 19 20 47 49 50
    54 55 58 59 72 73 78
if-then-else (51)
    左： 11, 右： 4
if-then (52)
    左： 12, 右： 5
for (53)
    左： 13, 右： 7
while (54)
    左： 14, 右： 6
let-expression (55)
    左： 15, 右： 8
semicolon-separated-expression (56)
    左： 16 17, 右： 15 19 44
nonempty-semicolon-separated-expression (57)
    左： 18 19, 右： 17
assignment-expression (58)
    左： 20, 右： 9
logical-or-expression (59)
    左： 21 22, 右： 10 22
logical-and-expression (60)
    左： 23 24, 右： 21 22 24
equality-expression (61)
    左： 25 26 27 28 29 30 31, 右： 23 24
additive-expression (62)
    左： 32 33 34, 右： 25 26 27 28 29 30 31 33 34
multiplicative-expression (63)
    左： 35 36 37, 右： 32 33 34 36 37
unary-expression (64)
    左： 38 39, 右： 35 36 37 39
postfix-expression (65)
    左： 40 41 42 43 44 45 46 47, 右： 38
lvalue-expression (66)
    左： 48 49 50 51, 右： 20 40 50 51
comma-separated-record-field (67)
    左： 52 53, 右： 46 55
nonempty-comma-separated-record-field (68)
    左： 54 55, 右： 53
comma-separated-expression (69)
    左： 56 57, 右： 45 59
nonempty-comma-separated-expression (70)
    左： 58 59, 右： 57
space-separated-declaration (71)
    左： 60 61, 右： 15 61
declaration (72)
    左： 62 63 64, 右： 61
type-declaration (73)
    左： 65, 右： 64
type (74)
    左： 66 67 68, 右： 65
record-type (75)
    左： 69, 右： 68
comma-separated-field (76)
    左： 70 71, 右： 69 71
function-declaration (77)
    左： 72 73, 右： 62
comma-separated-parameter (78)
    左： 74 75, 右： 72 73 77
nonempty-comma-separated-parameter (79)
    左： 76 77, 右： 75
variable-declaration (80)
    左： 78, 右： 63
nullable-colon-type (81)
    左： 79 80, 右： 78


State 0

    0 $accept: . program $end

    LPAREN      shift, and go to state 1
    MINUS       shift, and go to state 2
    FOR         shift, and go to state 3
    IF          shift, and go to state 4
    LET         shift, and go to state 5
    NIL         shift, and go to state 6
    WHILE       shift, and go to state 7
    INT         shift, and go to state 8
    STRING      shift, and go to state 9
    IDENTIFIER  shift, and go to state 10

    program                    转到状态 11
    expression                 转到状态 12
    if-then-else               转到状态 13
    if-then                    转到状态 14
    for                        转到状态 15
    while                      转到状态 16
    let-expression             转到状态 17
    assignment-expression      转到状态 18
    logical-or-expression      转到状态 19
    logical-and-expression     转到状态 20
    equality-expression        转到状态 21
    additive-expression        转到状态 22
    multiplicative-expression  转到状态 23
    unary-expression           转到状态 24
    postfix-expression         转到状态 25
    lvalue-expression          转到状态 26


State 1

   44 postfix-expression: LPAREN . semicolon-separated-expression RPAREN

    LPAREN      shift, and go to state 1
    MINUS       shift, and go to state 2
    FOR         shift, and go to state 3
    IF          shift, and go to state 4
    LET         shift, and go to state 5
    NIL         shift, and go to state 6
    WHILE       shift, and go to state 7
    INT         shift, and go to state 8
    STRING      shift, and go to state 9
    IDENTIFIER  shift, and go to state 10

    $default  reduce using rule 16 (semicolon-separated-expression)

    expression                               转到状态 27
    if-then-else                             转到状态 13
    if-then                                  转到状态 14
    for                                      转到状态 15
    while                                    转到状态 16
    let-expression                           转到状态 17
    semicolon-separated-expression           转到状态 28
    nonempty-semicolon-separated-expression  转到状态 29
    assignment-expression                    转到状态 18
    logical-or-expression                    转到状态 19
    logical-and-expression                   转到状态 20
    equality-expression                      转到状态 21
    additive-expression                      转到状态 22
    multiplicative-expression                转到状态 23
    unary-expression                         转到状态 24
    postfix-expression                       转到状态 25
    lvalue-expression                        转到状态 26


State 2

   39 unary-expression: MINUS . unary-expression

    LPAREN      shift, and go to state 1
    MINUS       shift, and go to state 2
    NIL         shift, and go to state 6
    INT         shift, and go to state 8
    STRING      shift, and go to state 9
    IDENTIFIER  shift, and go to state 10

    unary-expression    转到状态 30
    postfix-expression  转到状态 25
    lvalue-expression   转到状态 31


State 3

   13 for: FOR . IDENTIFIER ASSIGN expression TO expression DO breakable-expression

    IDENTIFIER  shift, and go to state 32


State 4

   11 if-then-else: IF . expression THEN expression ELSE expression
   12 if-then: IF . expression THEN expression

    LPAREN      shift, and go to state 1
    MINUS       shift, and go to state 2
    FOR         shift, and go to state 3
    IF          shift, and go to state 4
    LET         shift, and go to state 5
    NIL         shift, and go to state 6
    WHILE       shift, and go to state 7
    INT         shift, and go to state 8
    STRING      shift, and go to state 9
    IDENTIFIER  shift, and go to state 10

    expression                 转到状态 33
    if-then-else               转到状态 13
    if-then                    转到状态 14
    for                        转到状态 15
    while                      转到状态 16
    let-expression             转到状态 17
    assignment-expression      转到状态 18
    logical-or-expression      转到状态 19
    logical-and-expression     转到状态 20
    equality-expression        转到状态 21
    additive-expression        转到状态 22
    multiplicative-expression  转到状态 23
    unary-expression           转到状态 24
    postfix-expression         转到状态 25
    lvalue-expression          转到状态 26


State 5

   15 let-expression: LET . space-separated-declaration IN semicolon-separated-expression END

    $default  reduce using rule 60 (space-separated-declaration)

    space-separated-declaration  转到状态 34


State 6

   43 postfix-expression: NIL .

    $default  reduce using rule 43 (postfix-expression)


State 7

   14 while: WHILE . expression DO breakable-expression

    LPAREN      shift, and go to state 1
    MINUS       shift, and go to state 2
    FOR         shift, and go to state 3
    IF          shift, and go to state 4
    LET         shift, and go to state 5
    NIL         shift, and go to state 6
    WHILE       shift, and go to state 7
    INT         shift, and go to state 8
    STRING      shift, and go to state 9
    IDENTIFIER  shift, and go to state 10

    expression                 转到状态 35
    if-then-else               转到状态 13
    if-then                    转到状态 14
    for                        转到状态 15
    while                      转到状态 16
    let-expression             转到状态 17
    assignment-expression      转到状态 18
    logical-or-expression      转到状态 19
    logical-and-expression     转到状态 20
    equality-expression        转到状态 21
    additive-expression        转到状态 22
    multiplicative-expression  转到状态 23
    unary-expression           转到状态 24
    postfix-expression         转到状态 25
    lvalue-expression          转到状态 26


State 8

   42 postfix-expression: INT .

    $default  reduce using rule 42 (postfix-expression)


State 9

   41 postfix-expression: STRING .

    $default  reduce using rule 41 (postfix-expression)


State 10

   45 postfix-expression: IDENTIFIER . LPAREN comma-separated-expression RPAREN
   46                   | IDENTIFIER . LBRACE comma-separated-record-field RBRACE
   47                   | IDENTIFIER . LBRACKET expression RBRACKET OF expression
   48 lvalue-expression: IDENTIFIER .
   49                  | IDENTIFIER . LBRACKET expression RBRACKET

    LPAREN    shift, and go to state 36
    LBRACKET  shift, and go to state 37
    LBRACE    shift, and go to state 38

    LBRACKET  [reduce using rule 48 (lvalue-expression)]
    $default  reduce using rule 48 (lvalue-expression)


State 11

    0 $accept: program . $end

    $end  shift, and go to state 39


State 12

    1 program: expression .

    $default  reduce using rule 1 (program)


State 13

    4 expression: if-then-else .

    $default  reduce using rule 4 (expression)


State 14

    5 expression: if-then .

    $default  reduce using rule 5 (expression)


State 15

    7 expression: for .

    $default  reduce using rule 7 (expression)


State 16

    6 expression: while .

    $default  reduce using rule 6 (expression)


State 17

    8 expression: let-expression .

    $default  reduce using rule 8 (expression)


State 18

    9 expression: assignment-expression .

    $default  reduce using rule 9 (expression)


State 19

   10 expression: logical-or-expression .
   22 logical-or-expression: logical-or-expression . OR logical-and-expression

    OR  shift, and go to state 40

    OR        [reduce using rule 10 (expression)]
    $default  reduce using rule 10 (expression)


State 20

   21 logical-or-expression: logical-and-expression .
   24 logical-and-expression: logical-and-expression . AND equality-expression

    AND  shift, and go to state 41

    AND       [reduce using rule 21 (logical-or-expression)]
    $default  reduce using rule 21 (logical-or-expression)


State 21

   23 logical-and-expression: equality-expression .

    $default  reduce using rule 23 (logical-and-expression)


State 22

   25 equality-expression: additive-expression .
   26                    | additive-expression . EQ additive-expression
   27                    | additive-expression . NEQ additive-expression
   28                    | additive-expression . LT additive-expression
   29                    | additive-expression . LE additive-expression
   30                    | additive-expression . GT additive-expression
   31                    | additive-expression . GE additive-expression
   33 additive-expression: additive-expression . PLUS multiplicative-expression
   34                    | additive-expression . MINUS multiplicative-expression

    PLUS   shift, and go to state 42
    MINUS  shift, and go to state 43
    EQ     shift, and go to state 44
    NEQ    shift, and go to state 45
    GT     shift, and go to state 46
    LT     shift, and go to state 47
    GE     shift, and go to state 48
    LE     shift, and go to state 49

    PLUS      [reduce using rule 25 (equality-expression)]
    MINUS     [reduce using rule 25 (equality-expression)]
    EQ        [reduce using rule 25 (equality-expression)]
    NEQ       [reduce using rule 25 (equality-expression)]
    GT        [reduce using rule 25 (equality-expression)]
    LT        [reduce using rule 25 (equality-expression)]
    GE        [reduce using rule 25 (equality-expression)]
    LE        [reduce using rule 25 (equality-expression)]
    $default  reduce using rule 25 (equality-expression)


State 23

   32 additive-expression: multiplicative-expression .
   36 multiplicative-expression: multiplicative-expression . TIMES unary-expression
   37                          | multiplicative-expression . DIVIDE unary-expression

    TIMES   shift, and go to state 50
    DIVIDE  shift, and go to state 51

    TIMES     [reduce using rule 32 (additive-expression)]
    DIVIDE    [reduce using rule 32 (additive-expression)]
    $default  reduce using rule 32 (additive-expression)


State 24

   35 multiplicative-expression: unary-expression .

    $default  reduce using rule 35 (multiplicative-expression)


State 25

   38 unary-expression: postfix-expression .

    $default  reduce using rule 38 (unary-expression)


State 26

   20 assignment-expression: lvalue-expression . ASSIGN expression
   40 postfix-expression: lvalue-expression .
   50 lvalue-expression: lvalue-expression . LBRACKET expression RBRACKET
   51                  | lvalue-expression . DOT IDENTIFIER

    LBRACKET  shift, and go to state 52
    ASSIGN    shift, and go to state 53
    DOT       shift, and go to state 54

    $default  reduce using rule 40 (postfix-expression)


State 27

   18 nonempty-semicolon-separated-expression: expression .

    $default  reduce using rule 18 (nonempty-semicolon-separated-expression)


State 28

   19 nonempty-semicolon-separated-expression: semicolon-separated-expression . SEMICOLON expression
   44 postfix-expression: LPAREN semicolon-separated-expression . RPAREN

    RPAREN     shift, and go to state 55
    SEMICOLON  shift, and go to state 56


State 29

   17 semicolon-separated-expression: nonempty-semicolon-separated-expression .

    $default  reduce using rule 17 (semicolon-separated-expression)


State 30

   39 unary-expression: MINUS unary-expression .

    $default  reduce using rule 39 (unary-expression)


State 31

   40 postfix-expression: lvalue-expression .
   50 lvalue-expression: lvalue-expression . LBRACKET expression RBRACKET
   51                  | lvalue-expression . DOT IDENTIFIER

    LBRACKET  shift, and go to state 52
    DOT       shift, and go to state 54

    $default  reduce using rule 40 (postfix-expression)


State 32

   13 for: FOR IDENTIFIER . ASSIGN expression TO expression DO breakable-expression

    ASSIGN  shift, and go to state 57


State 33

   11 if-then-else: IF expression . THEN expression ELSE expression
   12 if-then: IF expression . THEN expression

    THEN  shift, and go to state 58


State 34

   15 let-expression: LET space-separated-declaration . IN semicolon-separated-expression END
   61 space-separated-declaration: space-separated-declaration . declaration

    FUNCTION  shift, and go to state 59
    IN        shift, and go to state 60
    TYPE      shift, and go to state 61
    VAR       shift, and go to state 62

    declaration           转到状态 63
    type-declaration      转到状态 64
    function-declaration  转到状态 65
    variable-declaration  转到状态 66


State 35

   14 while: WHILE expression . DO breakable-expression

    DO  shift, and go to state 67


State 36

   45 postfix-expression: IDENTIFIER LPAREN . comma-separated-expression RPAREN

    LPAREN      shift, and go to state 1
    MINUS       shift, and go to state 2
    FOR         shift, and go to state 3
    IF          shift, and go to state 4
    LET         shift, and go to state 5
    NIL         shift, and go to state 6
    WHILE       shift, and go to state 7
    INT         shift, and go to state 8
    STRING      shift, and go to state 9
    IDENTIFIER  shift, and go to state 10

    $default  reduce using rule 56 (comma-separated-expression)

    expression                           转到状态 68
    if-then-else                         转到状态 13
    if-then                              转到状态 14
    for                                  转到状态 15
    while                                转到状态 16
    let-expression                       转到状态 17
    assignment-expression                转到状态 18
    logical-or-expression                转到状态 19
    logical-and-expression               转到状态 20
    equality-expression                  转到状态 21
    additive-expression                  转到状态 22
    multiplicative-expression            转到状态 23
    unary-expression                     转到状态 24
    postfix-expression                   转到状态 25
    lvalue-expression                    转到状态 26
    comma-separated-expression           转到状态 69
    nonempty-comma-separated-expression  转到状态 70


State 37

   47 postfix-expression: IDENTIFIER LBRACKET . expression RBRACKET OF expression
   49 lvalue-expression: IDENTIFIER LBRACKET . expression RBRACKET

    LPAREN      shift, and go to state 1
    MINUS       shift, and go to state 2
    FOR         shift, and go to state 3
    IF          shift, and go to state 4
    LET         shift, and go to state 5
    NIL         shift, and go to state 6
    WHILE       shift, and go to state 7
    INT         shift, and go to state 8
    STRING      shift, and go to state 9
    IDENTIFIER  shift, and go to state 10

    expression                 转到状态 71
    if-then-else               转到状态 13
    if-then                    转到状态 14
    for                        转到状态 15
    while                      转到状态 16
    let-expression             转到状态 17
    assignment-expression      转到状态 18
    logical-or-expression      转到状态 19
    logical-and-expression     转到状态 20
    equality-expression        转到状态 21
    additive-expression        转到状态 22
    multiplicative-expression  转到状态 23
    unary-expression           转到状态 24
    postfix-expression         转到状态 25
    lvalue-expression          转到状态 26


State 38

   46 postfix-expression: IDENTIFIER LBRACE . comma-separated-record-field RBRACE

    IDENTIFIER  shift, and go to state 72

    $default  reduce using rule 52 (comma-separated-record-field)

    comma-separated-record-field           转到状态 73
    nonempty-comma-separated-record-field  转到状态 74


State 39

    0 $accept: program $end .

    $default  接受


State 40

   22 logical-or-expression: logical-or-expression OR . logical-and-expression

    LPAREN      shift, and go to state 1
    MINUS       shift, and go to state 2
    NIL         shift, and go to state 6
    INT         shift, and go to state 8
    STRING      shift, and go to state 9
    IDENTIFIER  shift, and go to state 10

    logical-and-expression     转到状态 75
    equality-expression        转到状态 21
    additive-expression        转到状态 22
    multiplicative-expression  转到状态 23
    unary-expression           转到状态 24
    postfix-expression         转到状态 25
    lvalue-expression          转到状态 31


State 41

   24 logical-and-expression: logical-and-expression AND . equality-expression

    LPAREN      shift, and go to state 1
    MINUS       shift, and go to state 2
    NIL         shift, and go to state 6
    INT         shift, and go to state 8
    STRING      shift, and go to state 9
    IDENTIFIER  shift, and go to state 10

    equality-expression        转到状态 76
    additive-expression        转到状态 22
    multiplicative-expression  转到状态 23
    unary-expression           转到状态 24
    postfix-expression         转到状态 25
    lvalue-expression          转到状态 31


State 42

   33 additive-expression: additive-expression PLUS . multiplicative-expression

    LPAREN      shift, and go to state 1
    MINUS       shift, and go to state 2
    NIL         shift, and go to state 6
    INT         shift, and go to state 8
    STRING      shift, and go to state 9
    IDENTIFIER  shift, and go to state 10

    multiplicative-expression  转到状态 77
    unary-expression           转到状态 24
    postfix-expression         转到状态 25
    lvalue-expression          转到状态 31


State 43

   34 additive-expression: additive-expression MINUS . multiplicative-expression

    LPAREN      shift, and go to state 1
    MINUS       shift, and go to state 2
    NIL         shift, and go to state 6
    INT         shift, and go to state 8
    STRING      shift, and go to state 9
    IDENTIFIER  shift, and go to state 10

    multiplicative-expression  转到状态 78
    unary-expression           转到状态 24
    postfix-expression         转到状态 25
    lvalue-expression          转到状态 31


State 44

   26 equality-expression: additive-expression EQ . additive-expression

    LPAREN      shift, and go to state 1
    MINUS       shift, and go to state 2
    NIL         shift, and go to state 6
    INT         shift, and go to state 8
    STRING      shift, and go to state 9
    IDENTIFIER  shift, and go to state 10

    additive-expression        转到状态 79
    multiplicative-expression  转到状态 23
    unary-expression           转到状态 24
    postfix-expression         转到状态 25
    lvalue-expression          转到状态 31


State 45

   27 equality-expression: additive-expression NEQ . additive-expression

    LPAREN      shift, and go to state 1
    MINUS       shift, and go to state 2
    NIL         shift, and go to state 6
    INT         shift, and go to state 8
    STRING      shift, and go to state 9
    IDENTIFIER  shift, and go to state 10

    additive-expression        转到状态 80
    multiplicative-expression  转到状态 23
    unary-expression           转到状态 24
    postfix-expression         转到状态 25
    lvalue-expression          转到状态 31


State 46

   30 equality-expression: additive-expression GT . additive-expression

    LPAREN      shift, and go to state 1
    MINUS       shift, and go to state 2
    NIL         shift, and go to state 6
    INT         shift, and go to state 8
    STRING      shift, and go to state 9
    IDENTIFIER  shift, and go to state 10

    additive-expression        转到状态 81
    multiplicative-expression  转到状态 23
    unary-expression           转到状态 24
    postfix-expression         转到状态 25
    lvalue-expression          转到状态 31


State 47

   28 equality-expression: additive-expression LT . additive-expression

    LPAREN      shift, and go to state 1
    MINUS       shift, and go to state 2
    NIL         shift, and go to state 6
    INT         shift, and go to state 8
    STRING      shift, and go to state 9
    IDENTIFIER  shift, and go to state 10

    additive-expression        转到状态 82
    multiplicative-expression  转到状态 23
    unary-expression           转到状态 24
    postfix-expression         转到状态 25
    lvalue-expression          转到状态 31


State 48

   31 equality-expression: additive-expression GE . additive-expression

    LPAREN      shift, and go to state 1
    MINUS       shift, and go to state 2
    NIL         shift, and go to state 6
    INT         shift, and go to state 8
    STRING      shift, and go to state 9
    IDENTIFIER  shift, and go to state 10

    additive-expression        转到状态 83
    multiplicative-expression  转到状态 23
    unary-expression           转到状态 24
    postfix-expression         转到状态 25
    lvalue-expression          转到状态 31


State 49

   29 equality-expression: additive-expression LE . additive-expression

    LPAREN      shift, and go to state 1
    MINUS       shift, and go to state 2
    NIL         shift, and go to state 6
    INT         shift, and go to state 8
    STRING      shift, and go to state 9
    IDENTIFIER  shift, and go to state 10

    additive-expression        转到状态 84
    multiplicative-expression  转到状态 23
    unary-expression           转到状态 24
    postfix-expression         转到状态 25
    lvalue-expression          转到状态 31


State 50

   36 multiplicative-expression: multiplicative-expression TIMES . unary-expression

    LPAREN      shift, and go to state 1
    MINUS       shift, and go to state 2
    NIL         shift, and go to state 6
    INT         shift, and go to state 8
    STRING      shift, and go to state 9
    IDENTIFIER  shift, and go to state 10

    unary-expression    转到状态 85
    postfix-expression  转到状态 25
    lvalue-expression   转到状态 31


State 51

   37 multiplicative-expression: multiplicative-expression DIVIDE . unary-expression

    LPAREN      shift, and go to state 1
    MINUS       shift, and go to state 2
    NIL         shift, and go to state 6
    INT         shift, and go to state 8
    STRING      shift, and go to state 9
    IDENTIFIER  shift, and go to state 10

    unary-expression    转到状态 86
    postfix-expression  转到状态 25
    lvalue-expression   转到状态 31


State 52

   50 lvalue-expression: lvalue-expression LBRACKET . expression RBRACKET

    LPAREN      shift, and go to state 1
    MINUS       shift, and go to state 2
    FOR         shift, and go to state 3
    IF          shift, and go to state 4
    LET         shift, and go to state 5
    NIL         shift, and go to state 6
    WHILE       shift, and go to state 7
    INT         shift, and go to state 8
    STRING      shift, and go to state 9
    IDENTIFIER  shift, and go to state 10

    expression                 转到状态 87
    if-then-else               转到状态 13
    if-then                    转到状态 14
    for                        转到状态 15
    while                      转到状态 16
    let-expression             转到状态 17
    assignment-expression      转到状态 18
    logical-or-expression      转到状态 19
    logical-and-expression     转到状态 20
    equality-expression        转到状态 21
    additive-expression        转到状态 22
    multiplicative-expression  转到状态 23
    unary-expression           转到状态 24
    postfix-expression         转到状态 25
    lvalue-expression          转到状态 26


State 53

   20 assignment-expression: lvalue-expression ASSIGN . expression

    LPAREN      shift, and go to state 1
    MINUS       shift, and go to state 2
    FOR         shift, and go to state 3
    IF          shift, and go to state 4
    LET         shift, and go to state 5
    NIL         shift, and go to state 6
    WHILE       shift, and go to state 7
    INT         shift, and go to state 8
    STRING      shift, and go to state 9
    IDENTIFIER  shift, and go to state 10

    expression                 转到状态 88
    if-then-else               转到状态 13
    if-then                    转到状态 14
    for                        转到状态 15
    while                      转到状态 16
    let-expression             转到状态 17
    assignment-expression      转到状态 18
    logical-or-expression      转到状态 19
    logical-and-expression     转到状态 20
    equality-expression        转到状态 21
    additive-expression        转到状态 22
    multiplicative-expression  转到状态 23
    unary-expression           转到状态 24
    postfix-expression         转到状态 25
    lvalue-expression          转到状态 26


State 54

   51 lvalue-expression: lvalue-expression DOT . IDENTIFIER

    IDENTIFIER  shift, and go to state 89


State 55

   44 postfix-expression: LPAREN semicolon-separated-expression RPAREN .

    $default  reduce using rule 44 (postfix-expression)


State 56

   19 nonempty-semicolon-separated-expression: semicolon-separated-expression SEMICOLON . expression

    LPAREN      shift, and go to state 1
    MINUS       shift, and go to state 2
    FOR         shift, and go to state 3
    IF          shift, and go to state 4
    LET         shift, and go to state 5
    NIL         shift, and go to state 6
    WHILE       shift, and go to state 7
    INT         shift, and go to state 8
    STRING      shift, and go to state 9
    IDENTIFIER  shift, and go to state 10

    expression                 转到状态 90
    if-then-else               转到状态 13
    if-then                    转到状态 14
    for                        转到状态 15
    while                      转到状态 16
    let-expression             转到状态 17
    assignment-expression      转到状态 18
    logical-or-expression      转到状态 19
    logical-and-expression     转到状态 20
    equality-expression        转到状态 21
    additive-expression        转到状态 22
    multiplicative-expression  转到状态 23
    unary-expression           转到状态 24
    postfix-expression         转到状态 25
    lvalue-expression          转到状态 26


State 57

   13 for: FOR IDENTIFIER ASSIGN . expression TO expression DO breakable-expression

    LPAREN      shift, and go to state 1
    MINUS       shift, and go to state 2
    FOR         shift, and go to state 3
    IF          shift, and go to state 4
    LET         shift, and go to state 5
    NIL         shift, and go to state 6
    WHILE       shift, and go to state 7
    INT         shift, and go to state 8
    STRING      shift, and go to state 9
    IDENTIFIER  shift, and go to state 10

    expression                 转到状态 91
    if-then-else               转到状态 13
    if-then                    转到状态 14
    for                        转到状态 15
    while                      转到状态 16
    let-expression             转到状态 17
    assignment-expression      转到状态 18
    logical-or-expression      转到状态 19
    logical-and-expression     转到状态 20
    equality-expression        转到状态 21
    additive-expression        转到状态 22
    multiplicative-expression  转到状态 23
    unary-expression           转到状态 24
    postfix-expression         转到状态 25
    lvalue-expression          转到状态 26


State 58

   11 if-then-else: IF expression THEN . expression ELSE expression
   12 if-then: IF expression THEN . expression

    LPAREN      shift, and go to state 1
    MINUS       shift, and go to state 2
    FOR         shift, and go to state 3
    IF          shift, and go to state 4
    LET         shift, and go to state 5
    NIL         shift, and go to state 6
    WHILE       shift, and go to state 7
    INT         shift, and go to state 8
    STRING      shift, and go to state 9
    IDENTIFIER  shift, and go to state 10

    expression                 转到状态 92
    if-then-else               转到状态 13
    if-then                    转到状态 14
    for                        转到状态 15
    while                      转到状态 16
    let-expression             转到状态 17
    assignment-expression      转到状态 18
    logical-or-expression      转到状态 19
    logical-and-expression     转到状态 20
    equality-expression        转到状态 21
    additive-expression        转到状态 22
    multiplicative-expression  转到状态 23
    unary-expression           转到状态 24
    postfix-expression         转到状态 25
    lvalue-expression          转到状态 26


State 59

   72 function-declaration: FUNCTION . IDENTIFIER LPAREN comma-separated-parameter RPAREN COLON IDENTIFIER EQ expression
   73                     | FUNCTION . IDENTIFIER LPAREN comma-separated-parameter RPAREN EQ expression

    IDENTIFIER  shift, and go to state 93


State 60

   15 let-expression: LET space-separated-declaration IN . semicolon-separated-expression END

    LPAREN      shift, and go to state 1
    MINUS       shift, and go to state 2
    FOR         shift, and go to state 3
    IF          shift, and go to state 4
    LET         shift, and go to state 5
    NIL         shift, and go to state 6
    WHILE       shift, and go to state 7
    INT         shift, and go to state 8
    STRING      shift, and go to state 9
    IDENTIFIER  shift, and go to state 10

    $default  reduce using rule 16 (semicolon-separated-expression)

    expression                               转到状态 27
    if-then-else                             转到状态 13
    if-then                                  转到状态 14
    for                                      转到状态 15
    while                                    转到状态 16
    let-expression                           转到状态 17
    semicolon-separated-expression           转到状态 94
    nonempty-semicolon-separated-expression  转到状态 29
    assignment-expression                    转到状态 18
    logical-or-expression                    转到状态 19
    logical-and-expression                   转到状态 20
    equality-expression                      转到状态 21
    additive-expression                      转到状态 22
    multiplicative-expression                转到状态 23
    unary-expression                         转到状态 24
    postfix-expression                       转到状态 25
    lvalue-expression                        转到状态 26


State 61

   65 type-declaration: TYPE . IDENTIFIER EQ type

    IDENTIFIER  shift, and go to state 95


State 62

   78 variable-declaration: VAR . IDENTIFIER nullable-colon-type ASSIGN expression

    IDENTIFIER  shift, and go to state 96


State 63

   61 space-separated-declaration: space-separated-declaration declaration .

    $default  reduce using rule 61 (space-separated-declaration)


State 64

   64 declaration: type-declaration .

    $default  reduce using rule 64 (declaration)


State 65

   62 declaration: function-declaration .

    $default  reduce using rule 62 (declaration)


State 66

   63 declaration: variable-declaration .

    $default  reduce using rule 63 (declaration)


State 67

   14 while: WHILE expression DO . breakable-expression

    LPAREN      shift, and go to state 1
    MINUS       shift, and go to state 2
    BREAK       shift, and go to state 97
    FOR         shift, and go to state 3
    IF          shift, and go to state 4
    LET         shift, and go to state 5
    NIL         shift, and go to state 6
    WHILE       shift, and go to state 7
    INT         shift, and go to state 8
    STRING      shift, and go to state 9
    IDENTIFIER  shift, and go to state 10

    breakable-expression       转到状态 98
    expression                 转到状态 99
    if-then-else               转到状态 13
    if-then                    转到状态 14
    for                        转到状态 15
    while                      转到状态 16
    let-expression             转到状态 17
    assignment-expression      转到状态 18
    logical-or-expression      转到状态 19
    logical-and-expression     转到状态 20
    equality-expression        转到状态 21
    additive-expression        转到状态 22
    multiplicative-expression  转到状态 23
    unary-expression           转到状态 24
    postfix-expression         转到状态 25
    lvalue-expression          转到状态 26


State 68

   58 nonempty-comma-separated-expression: expression .

    $default  reduce using rule 58 (nonempty-comma-separated-expression)


State 69

   45 postfix-expression: IDENTIFIER LPAREN comma-separated-expression . RPAREN
   59 nonempty-comma-separated-expression: comma-separated-expression . COMMA expression

    RPAREN  shift, and go to state 100
    COMMA   shift, and go to state 101


State 70

   57 comma-separated-expression: nonempty-comma-separated-expression .

    $default  reduce using rule 57 (comma-separated-expression)


State 71

   47 postfix-expression: IDENTIFIER LBRACKET expression . RBRACKET OF expression
   49 lvalue-expression: IDENTIFIER LBRACKET expression . RBRACKET

    RBRACKET  shift, and go to state 102


State 72

   54 nonempty-comma-separated-record-field: IDENTIFIER . EQ expression

    EQ  shift, and go to state 103


State 73

   46 postfix-expression: IDENTIFIER LBRACE comma-separated-record-field . RBRACE
   55 nonempty-comma-separated-record-field: comma-separated-record-field . COMMA IDENTIFIER EQ expression

    RBRACE  shift, and go to state 104
    COMMA   shift, and go to state 105


State 74

   53 comma-separated-record-field: nonempty-comma-separated-record-field .

    $default  reduce using rule 53 (comma-separated-record-field)


State 75

   22 logical-or-expression: logical-or-expression OR logical-and-expression .
   24 logical-and-expression: logical-and-expression . AND equality-expression

    AND  shift, and go to state 41

    AND       [reduce using rule 22 (logical-or-expression)]
    $default  reduce using rule 22 (logical-or-expression)


State 76

   24 logical-and-expression: logical-and-expression AND equality-expression .

    $default  reduce using rule 24 (logical-and-expression)


State 77

   33 additive-expression: additive-expression PLUS multiplicative-expression .
   36 multiplicative-expression: multiplicative-expression . TIMES unary-expression
   37                          | multiplicative-expression . DIVIDE unary-expression

    TIMES   shift, and go to state 50
    DIVIDE  shift, and go to state 51

    TIMES     [reduce using rule 33 (additive-expression)]
    DIVIDE    [reduce using rule 33 (additive-expression)]
    $default  reduce using rule 33 (additive-expression)


State 78

   34 additive-expression: additive-expression MINUS multiplicative-expression .
   36 multiplicative-expression: multiplicative-expression . TIMES unary-expression
   37                          | multiplicative-expression . DIVIDE unary-expression

    TIMES   shift, and go to state 50
    DIVIDE  shift, and go to state 51

    TIMES     [reduce using rule 34 (additive-expression)]
    DIVIDE    [reduce using rule 34 (additive-expression)]
    $default  reduce using rule 34 (additive-expression)


State 79

   26 equality-expression: additive-expression EQ additive-expression .
   33 additive-expression: additive-expression . PLUS multiplicative-expression
   34                    | additive-expression . MINUS multiplicative-expression

    PLUS   shift, and go to state 42
    MINUS  shift, and go to state 43

    PLUS      [reduce using rule 26 (equality-expression)]
    MINUS     [reduce using rule 26 (equality-expression)]
    $default  reduce using rule 26 (equality-expression)


State 80

   27 equality-expression: additive-expression NEQ additive-expression .
   33 additive-expression: additive-expression . PLUS multiplicative-expression
   34                    | additive-expression . MINUS multiplicative-expression

    PLUS   shift, and go to state 42
    MINUS  shift, and go to state 43

    PLUS      [reduce using rule 27 (equality-expression)]
    MINUS     [reduce using rule 27 (equality-expression)]
    $default  reduce using rule 27 (equality-expression)


State 81

   30 equality-expression: additive-expression GT additive-expression .
   33 additive-expression: additive-expression . PLUS multiplicative-expression
   34                    | additive-expression . MINUS multiplicative-expression

    PLUS   shift, and go to state 42
    MINUS  shift, and go to state 43

    PLUS      [reduce using rule 30 (equality-expression)]
    MINUS     [reduce using rule 30 (equality-expression)]
    $default  reduce using rule 30 (equality-expression)


State 82

   28 equality-expression: additive-expression LT additive-expression .
   33 additive-expression: additive-expression . PLUS multiplicative-expression
   34                    | additive-expression . MINUS multiplicative-expression

    PLUS   shift, and go to state 42
    MINUS  shift, and go to state 43

    PLUS      [reduce using rule 28 (equality-expression)]
    MINUS     [reduce using rule 28 (equality-expression)]
    $default  reduce using rule 28 (equality-expression)


State 83

   31 equality-expression: additive-expression GE additive-expression .
   33 additive-expression: additive-expression . PLUS multiplicative-expression
   34                    | additive-expression . MINUS multiplicative-expression

    PLUS   shift, and go to state 42
    MINUS  shift, and go to state 43

    PLUS      [reduce using rule 31 (equality-expression)]
    MINUS     [reduce using rule 31 (equality-expression)]
    $default  reduce using rule 31 (equality-expression)


State 84

   29 equality-expression: additive-expression LE additive-expression .
   33 additive-expression: additive-expression . PLUS multiplicative-expression
   34                    | additive-expression . MINUS multiplicative-expression

    PLUS   shift, and go to state 42
    MINUS  shift, and go to state 43

    PLUS      [reduce using rule 29 (equality-expression)]
    MINUS     [reduce using rule 29 (equality-expression)]
    $default  reduce using rule 29 (equality-expression)


State 85

   36 multiplicative-expression: multiplicative-expression TIMES unary-expression .

    $default  reduce using rule 36 (multiplicative-expression)


State 86

   37 multiplicative-expression: multiplicative-expression DIVIDE unary-expression .

    $default  reduce using rule 37 (multiplicative-expression)


State 87

   50 lvalue-expression: lvalue-expression LBRACKET expression . RBRACKET

    RBRACKET  shift, and go to state 106


State 88

   20 assignment-expression: lvalue-expression ASSIGN expression .

    $default  reduce using rule 20 (assignment-expression)


State 89

   51 lvalue-expression: lvalue-expression DOT IDENTIFIER .

    $default  reduce using rule 51 (lvalue-expression)


State 90

   19 nonempty-semicolon-separated-expression: semicolon-separated-expression SEMICOLON expression .

    $default  reduce using rule 19 (nonempty-semicolon-separated-expression)


State 91

   13 for: FOR IDENTIFIER ASSIGN expression . TO expression DO breakable-expression

    TO  shift, and go to state 107


State 92

   11 if-then-else: IF expression THEN expression . ELSE expression
   12 if-then: IF expression THEN expression .

    ELSE  shift, and go to state 108

    ELSE      [reduce using rule 12 (if-then)]
    $default  reduce using rule 12 (if-then)


State 93

   72 function-declaration: FUNCTION IDENTIFIER . LPAREN comma-separated-parameter RPAREN COLON IDENTIFIER EQ expression
   73                     | FUNCTION IDENTIFIER . LPAREN comma-separated-parameter RPAREN EQ expression

    LPAREN  shift, and go to state 109


State 94

   15 let-expression: LET space-separated-declaration IN semicolon-separated-expression . END
   19 nonempty-semicolon-separated-expression: semicolon-separated-expression . SEMICOLON expression

    SEMICOLON  shift, and go to state 56
    END        shift, and go to state 110


State 95

   65 type-declaration: TYPE IDENTIFIER . EQ type

    EQ  shift, and go to state 111


State 96

   78 variable-declaration: VAR IDENTIFIER . nullable-colon-type ASSIGN expression

    COLON  shift, and go to state 112

    $default  reduce using rule 79 (nullable-colon-type)

    nullable-colon-type  转到状态 113


State 97

    2 breakable-expression: BREAK .

    $default  reduce using rule 2 (breakable-expression)


State 98

   14 while: WHILE expression DO breakable-expression .

    $default  reduce using rule 14 (while)


State 99

    3 breakable-expression: expression .

    $default  reduce using rule 3 (breakable-expression)


State 100

   45 postfix-expression: IDENTIFIER LPAREN comma-separated-expression RPAREN .

    $default  reduce using rule 45 (postfix-expression)


State 101

   59 nonempty-comma-separated-expression: comma-separated-expression COMMA . expression

    LPAREN      shift, and go to state 1
    MINUS       shift, and go to state 2
    FOR         shift, and go to state 3
    IF          shift, and go to state 4
    LET         shift, and go to state 5
    NIL         shift, and go to state 6
    WHILE       shift, and go to state 7
    INT         shift, and go to state 8
    STRING      shift, and go to state 9
    IDENTIFIER  shift, and go to state 10

    expression                 转到状态 114
    if-then-else               转到状态 13
    if-then                    转到状态 14
    for                        转到状态 15
    while                      转到状态 16
    let-expression             转到状态 17
    assignment-expression      转到状态 18
    logical-or-expression      转到状态 19
    logical-and-expression     转到状态 20
    equality-expression        转到状态 21
    additive-expression        转到状态 22
    multiplicative-expression  转到状态 23
    unary-expression           转到状态 24
    postfix-expression         转到状态 25
    lvalue-expression          转到状态 26


State 102

   47 postfix-expression: IDENTIFIER LBRACKET expression RBRACKET . OF expression
   49 lvalue-expression: IDENTIFIER LBRACKET expression RBRACKET .

    OF  shift, and go to state 115

    $default  reduce using rule 49 (lvalue-expression)


State 103

   54 nonempty-comma-separated-record-field: IDENTIFIER EQ . expression

    LPAREN      shift, and go to state 1
    MINUS       shift, and go to state 2
    FOR         shift, and go to state 3
    IF          shift, and go to state 4
    LET         shift, and go to state 5
    NIL         shift, and go to state 6
    WHILE       shift, and go to state 7
    INT         shift, and go to state 8
    STRING      shift, and go to state 9
    IDENTIFIER  shift, and go to state 10

    expression                 转到状态 116
    if-then-else               转到状态 13
    if-then                    转到状态 14
    for                        转到状态 15
    while                      转到状态 16
    let-expression             转到状态 17
    assignment-expression      转到状态 18
    logical-or-expression      转到状态 19
    logical-and-expression     转到状态 20
    equality-expression        转到状态 21
    additive-expression        转到状态 22
    multiplicative-expression  转到状态 23
    unary-expression           转到状态 24
    postfix-expression         转到状态 25
    lvalue-expression          转到状态 26


State 104

   46 postfix-expression: IDENTIFIER LBRACE comma-separated-record-field RBRACE .

    $default  reduce using rule 46 (postfix-expression)


State 105

   55 nonempty-comma-separated-record-field: comma-separated-record-field COMMA . IDENTIFIER EQ expression

    IDENTIFIER  shift, and go to state 117


State 106

   50 lvalue-expression: lvalue-expression LBRACKET expression RBRACKET .

    $default  reduce using rule 50 (lvalue-expression)


State 107

   13 for: FOR IDENTIFIER ASSIGN expression TO . expression DO breakable-expression

    LPAREN      shift, and go to state 1
    MINUS       shift, and go to state 2
    FOR         shift, and go to state 3
    IF          shift, and go to state 4
    LET         shift, and go to state 5
    NIL         shift, and go to state 6
    WHILE       shift, and go to state 7
    INT         shift, and go to state 8
    STRING      shift, and go to state 9
    IDENTIFIER  shift, and go to state 10

    expression                 转到状态 118
    if-then-else               转到状态 13
    if-then                    转到状态 14
    for                        转到状态 15
    while                      转到状态 16
    let-expression             转到状态 17
    assignment-expression      转到状态 18
    logical-or-expression      转到状态 19
    logical-and-expression     转到状态 20
    equality-expression        转到状态 21
    additive-expression        转到状态 22
    multiplicative-expression  转到状态 23
    unary-expression           转到状态 24
    postfix-expression         转到状态 25
    lvalue-expression          转到状态 26


State 108

   11 if-then-else: IF expression THEN expression ELSE . expression

    LPAREN      shift, and go to state 1
    MINUS       shift, and go to state 2
    FOR         shift, and go to state 3
    IF          shift, and go to state 4
    LET         shift, and go to state 5
    NIL         shift, and go to state 6
    WHILE       shift, and go to state 7
    INT         shift, and go to state 8
    STRING      shift, and go to state 9
    IDENTIFIER  shift, and go to state 10

    expression                 转到状态 119
    if-then-else               转到状态 13
    if-then                    转到状态 14
    for                        转到状态 15
    while                      转到状态 16
    let-expression             转到状态 17
    assignment-expression      转到状态 18
    logical-or-expression      转到状态 19
    logical-and-expression     转到状态 20
    equality-expression        转到状态 21
    additive-expression        转到状态 22
    multiplicative-expression  转到状态 23
    unary-expression           转到状态 24
    postfix-expression         转到状态 25
    lvalue-expression          转到状态 26


State 109

   72 function-declaration: FUNCTION IDENTIFIER LPAREN . comma-separated-parameter RPAREN COLON IDENTIFIER EQ expression
   73                     | FUNCTION IDENTIFIER LPAREN . comma-separated-parameter RPAREN EQ expression

    IDENTIFIER  shift, and go to state 120

    $default  reduce using rule 74 (comma-separated-parameter)

    comma-separated-parameter           转到状态 121
    nonempty-comma-separated-parameter  转到状态 122


State 110

   15 let-expression: LET space-separated-declaration IN semicolon-separated-expression END .

    $default  reduce using rule 15 (let-expression)


State 111

   65 type-declaration: TYPE IDENTIFIER EQ . type

    LBRACE      shift, and go to state 123
    ARRAY       shift, and go to state 124
    IDENTIFIER  shift, and go to state 125

    type         转到状态 126
    record-type  转到状态 127


State 112

   80 nullable-colon-type: COLON . IDENTIFIER

    IDENTIFIER  shift, and go to state 128


State 113

   78 variable-declaration: VAR IDENTIFIER nullable-colon-type . ASSIGN expression

    ASSIGN  shift, and go to state 129


State 114

   59 nonempty-comma-separated-expression: comma-separated-expression COMMA expression .

    $default  reduce using rule 59 (nonempty-comma-separated-expression)


State 115

   47 postfix-expression: IDENTIFIER LBRACKET expression RBRACKET OF . expression

    LPAREN      shift, and go to state 1
    MINUS       shift, and go to state 2
    FOR         shift, and go to state 3
    IF          shift, and go to state 4
    LET         shift, and go to state 5
    NIL         shift, and go to state 6
    WHILE       shift, and go to state 7
    INT         shift, and go to state 8
    STRING      shift, and go to state 9
    IDENTIFIER  shift, and go to state 10

    expression                 转到状态 130
    if-then-else               转到状态 13
    if-then                    转到状态 14
    for                        转到状态 15
    while                      转到状态 16
    let-expression             转到状态 17
    assignment-expression      转到状态 18
    logical-or-expression      转到状态 19
    logical-and-expression     转到状态 20
    equality-expression        转到状态 21
    additive-expression        转到状态 22
    multiplicative-expression  转到状态 23
    unary-expression           转到状态 24
    postfix-expression         转到状态 25
    lvalue-expression          转到状态 26


State 116

   54 nonempty-comma-separated-record-field: IDENTIFIER EQ expression .

    $default  reduce using rule 54 (nonempty-comma-separated-record-field)


State 117

   55 nonempty-comma-separated-record-field: comma-separated-record-field COMMA IDENTIFIER . EQ expression

    EQ  shift, and go to state 131


State 118

   13 for: FOR IDENTIFIER ASSIGN expression TO expression . DO breakable-expression

    DO  shift, and go to state 132


State 119

   11 if-then-else: IF expression THEN expression ELSE expression .

    $default  reduce using rule 11 (if-then-else)


State 120

   76 nonempty-comma-separated-parameter: IDENTIFIER . COLON IDENTIFIER

    COLON  shift, and go to state 133


State 121

   72 function-declaration: FUNCTION IDENTIFIER LPAREN comma-separated-parameter . RPAREN COLON IDENTIFIER EQ expression
   73                     | FUNCTION IDENTIFIER LPAREN comma-separated-parameter . RPAREN EQ expression
   77 nonempty-comma-separated-parameter: comma-separated-parameter . COMMA IDENTIFIER COLON IDENTIFIER

    RPAREN  shift, and go to state 134
    COMMA   shift, and go to state 135


State 122

   75 comma-separated-parameter: nonempty-comma-separated-parameter .

    $default  reduce using rule 75 (comma-separated-parameter)


State 123

   69 record-type: LBRACE . comma-separated-field RBRACE

    IDENTIFIER  shift, and go to state 136

    comma-separated-field  转到状态 137


State 124

   67 type: ARRAY . OF IDENTIFIER

    OF  shift, and go to state 138


State 125

   66 type: IDENTIFIER .

    $default  reduce using rule 66 (type)


State 126

   65 type-declaration: TYPE IDENTIFIER EQ type .

    $default  reduce using rule 65 (type-declaration)


State 127

   68 type: record-type .

    $default  reduce using rule 68 (type)


State 128

   80 nullable-colon-type: COLON IDENTIFIER .

    $default  reduce using rule 80 (nullable-colon-type)


State 129

   78 variable-declaration: VAR IDENTIFIER nullable-colon-type ASSIGN . expression

    LPAREN      shift, and go to state 1
    MINUS       shift, and go to state 2
    FOR         shift, and go to state 3
    IF          shift, and go to state 4
    LET         shift, and go to state 5
    NIL         shift, and go to state 6
    WHILE       shift, and go to state 7
    INT         shift, and go to state 8
    STRING      shift, and go to state 9
    IDENTIFIER  shift, and go to state 10

    expression                 转到状态 139
    if-then-else               转到状态 13
    if-then                    转到状态 14
    for                        转到状态 15
    while                      转到状态 16
    let-expression             转到状态 17
    assignment-expression      转到状态 18
    logical-or-expression      转到状态 19
    logical-and-expression     转到状态 20
    equality-expression        转到状态 21
    additive-expression        转到状态 22
    multiplicative-expression  转到状态 23
    unary-expression           转到状态 24
    postfix-expression         转到状态 25
    lvalue-expression          转到状态 26


State 130

   47 postfix-expression: IDENTIFIER LBRACKET expression RBRACKET OF expression .

    $default  reduce using rule 47 (postfix-expression)


State 131

   55 nonempty-comma-separated-record-field: comma-separated-record-field COMMA IDENTIFIER EQ . expression

    LPAREN      shift, and go to state 1
    MINUS       shift, and go to state 2
    FOR         shift, and go to state 3
    IF          shift, and go to state 4
    LET         shift, and go to state 5
    NIL         shift, and go to state 6
    WHILE       shift, and go to state 7
    INT         shift, and go to state 8
    STRING      shift, and go to state 9
    IDENTIFIER  shift, and go to state 10

    expression                 转到状态 140
    if-then-else               转到状态 13
    if-then                    转到状态 14
    for                        转到状态 15
    while                      转到状态 16
    let-expression             转到状态 17
    assignment-expression      转到状态 18
    logical-or-expression      转到状态 19
    logical-and-expression     转到状态 20
    equality-expression        转到状态 21
    additive-expression        转到状态 22
    multiplicative-expression  转到状态 23
    unary-expression           转到状态 24
    postfix-expression         转到状态 25
    lvalue-expression          转到状态 26


State 132

   13 for: FOR IDENTIFIER ASSIGN expression TO expression DO . breakable-expression

    LPAREN      shift, and go to state 1
    MINUS       shift, and go to state 2
    BREAK       shift, and go to state 97
    FOR         shift, and go to state 3
    IF          shift, and go to state 4
    LET         shift, and go to state 5
    NIL         shift, and go to state 6
    WHILE       shift, and go to state 7
    INT         shift, and go to state 8
    STRING      shift, and go to state 9
    IDENTIFIER  shift, and go to state 10

    breakable-expression       转到状态 141
    expression                 转到状态 99
    if-then-else               转到状态 13
    if-then                    转到状态 14
    for                        转到状态 15
    while                      转到状态 16
    let-expression             转到状态 17
    assignment-expression      转到状态 18
    logical-or-expression      转到状态 19
    logical-and-expression     转到状态 20
    equality-expression        转到状态 21
    additive-expression        转到状态 22
    multiplicative-expression  转到状态 23
    unary-expression           转到状态 24
    postfix-expression         转到状态 25
    lvalue-expression          转到状态 26


State 133

   76 nonempty-comma-separated-parameter: IDENTIFIER COLON . IDENTIFIER

    IDENTIFIER  shift, and go to state 142


State 134

   72 function-declaration: FUNCTION IDENTIFIER LPAREN comma-separated-parameter RPAREN . COLON IDENTIFIER EQ expression
   73                     | FUNCTION IDENTIFIER LPAREN comma-separated-parameter RPAREN . EQ expression

    COLON  shift, and go to state 143
    EQ     shift, and go to state 144


State 135

   77 nonempty-comma-separated-parameter: comma-separated-parameter COMMA . IDENTIFIER COLON IDENTIFIER

    IDENTIFIER  shift, and go to state 145


State 136

   70 comma-separated-field: IDENTIFIER . COLON IDENTIFIER

    COLON  shift, and go to state 146


State 137

   69 record-type: LBRACE comma-separated-field . RBRACE
   71 comma-separated-field: comma-separated-field . COMMA IDENTIFIER COLON IDENTIFIER

    RBRACE  shift, and go to state 147
    COMMA   shift, and go to state 148


State 138

   67 type: ARRAY OF . IDENTIFIER

    IDENTIFIER  shift, and go to state 149


State 139

   78 variable-declaration: VAR IDENTIFIER nullable-colon-type ASSIGN expression .

    $default  reduce using rule 78 (variable-declaration)


State 140

   55 nonempty-comma-separated-record-field: comma-separated-record-field COMMA IDENTIFIER EQ expression .

    $default  reduce using rule 55 (nonempty-comma-separated-record-field)


State 141

   13 for: FOR IDENTIFIER ASSIGN expression TO expression DO breakable-expression .

    $default  reduce using rule 13 (for)


State 142

   76 nonempty-comma-separated-parameter: IDENTIFIER COLON IDENTIFIER .

    $default  reduce using rule 76 (nonempty-comma-separated-parameter)


State 143

   72 function-declaration: FUNCTION IDENTIFIER LPAREN comma-separated-parameter RPAREN COLON . IDENTIFIER EQ expression

    IDENTIFIER  shift, and go to state 150


State 144

   73 function-declaration: FUNCTION IDENTIFIER LPAREN comma-separated-parameter RPAREN EQ . expression

    LPAREN      shift, and go to state 1
    MINUS       shift, and go to state 2
    FOR         shift, and go to state 3
    IF          shift, and go to state 4
    LET         shift, and go to state 5
    NIL         shift, and go to state 6
    WHILE       shift, and go to state 7
    INT         shift, and go to state 8
    STRING      shift, and go to state 9
    IDENTIFIER  shift, and go to state 10

    expression                 转到状态 151
    if-then-else               转到状态 13
    if-then                    转到状态 14
    for                        转到状态 15
    while                      转到状态 16
    let-expression             转到状态 17
    assignment-expression      转到状态 18
    logical-or-expression      转到状态 19
    logical-and-expression     转到状态 20
    equality-expression        转到状态 21
    additive-expression        转到状态 22
    multiplicative-expression  转到状态 23
    unary-expression           转到状态 24
    postfix-expression         转到状态 25
    lvalue-expression          转到状态 26


State 145

   77 nonempty-comma-separated-parameter: comma-separated-parameter COMMA IDENTIFIER . COLON IDENTIFIER

    COLON  shift, and go to state 152


State 146

   70 comma-separated-field: IDENTIFIER COLON . IDENTIFIER

    IDENTIFIER  shift, and go to state 153


State 147

   69 record-type: LBRACE comma-separated-field RBRACE .

    $default  reduce using rule 69 (record-type)


State 148

   71 comma-separated-field: comma-separated-field COMMA . IDENTIFIER COLON IDENTIFIER

    IDENTIFIER  shift, and go to state 154


State 149

   67 type: ARRAY OF IDENTIFIER .

    $default  reduce using rule 67 (type)


State 150

   72 function-declaration: FUNCTION IDENTIFIER LPAREN comma-separated-parameter RPAREN COLON IDENTIFIER . EQ expression

    EQ  shift, and go to state 155


State 151

   73 function-declaration: FUNCTION IDENTIFIER LPAREN comma-separated-parameter RPAREN EQ expression .

    $default  reduce using rule 73 (function-declaration)


State 152

   77 nonempty-comma-separated-parameter: comma-separated-parameter COMMA IDENTIFIER COLON . IDENTIFIER

    IDENTIFIER  shift, and go to state 156


State 153

   70 comma-separated-field: IDENTIFIER COLON IDENTIFIER .

    $default  reduce using rule 70 (comma-separated-field)


State 154

   71 comma-separated-field: comma-separated-field COMMA IDENTIFIER . COLON IDENTIFIER

    COLON  shift, and go to state 157


State 155

   72 function-declaration: FUNCTION IDENTIFIER LPAREN comma-separated-parameter RPAREN COLON IDENTIFIER EQ . expression

    LPAREN      shift, and go to state 1
    MINUS       shift, and go to state 2
    FOR         shift, and go to state 3
    IF          shift, and go to state 4
    LET         shift, and go to state 5
    NIL         shift, and go to state 6
    WHILE       shift, and go to state 7
    INT         shift, and go to state 8
    STRING      shift, and go to state 9
    IDENTIFIER  shift, and go to state 10

    expression                 转到状态 158
    if-then-else               转到状态 13
    if-then                    转到状态 14
    for                        转到状态 15
    while                      转到状态 16
    let-expression             转到状态 17
    assignment-expression      转到状态 18
    logical-or-expression      转到状态 19
    logical-and-expression     转到状态 20
    equality-expression        转到状态 21
    additive-expression        转到状态 22
    multiplicative-expression  转到状态 23
    unary-expression           转到状态 24
    postfix-expression         转到状态 25
    lvalue-expression          转到状态 26


State 156

   77 nonempty-comma-separated-parameter: comma-separated-parameter COMMA IDENTIFIER COLON IDENTIFIER .

    $default  reduce using rule 77 (nonempty-comma-separated-parameter)


State 157

   71 comma-separated-field: comma-separated-field COMMA IDENTIFIER COLON . IDENTIFIER

    IDENTIFIER  shift, and go to state 159


State 158

   72 function-declaration: FUNCTION IDENTIFIER LPAREN comma-separated-parameter RPAREN COLON IDENTIFIER EQ expression .

    $default  reduce using rule 72 (function-declaration)


State 159

   71 comma-separated-field: comma-separated-field COMMA IDENTIFIER COLON IDENTIFIER .

    $default  reduce using rule 71 (comma-separated-field)
